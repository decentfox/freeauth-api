WITH
    q := <optional str>$q,
    users := (
        (SELECT User) IF NOT EXISTS q ELSE
        
        (
            SELECT User
            FILTER .name ?? '' ILIKE q
            OR .username ?? '' ILIKE q
            OR .mobile ?? '' ILIKE q
            OR .email ?? '' ILIKE q
        ) 
    ),

    name_filter := <optional json>$name,
    name_filter_op := <str>name_filter['op'],
    name_filter_val := <str>name_filter['val'],
    users1 := (
        (SELECT users) IF NOT EXISTS name_filter_op ELSE
        
        (SELECT users FILTER .name = name_filter_val)
        IF name_filter_op = 'eq' ELSE
        
        (SELECT users FILTER (.name != name_filter_val) ?? true)
        IF name_filter_op = 'neq' ELSE
        
        (SELECT users FILTER contains(.name, name_filter_val))
        IF name_filter_op = 'ct' ELSE 
        
        (SELECT users FILTER (NOT contains(.name, name_filter_val)) ?? true)
    ),

    username_filter := <optional json>$username,
    username_filter_op := <str>username_filter['op'],
    username_filter_val := <str>username_filter['val'],
    users2 := (
        (SELECT users1) IF NOT EXISTS username_filter_op ELSE
        
        (SELECT users1 FILTER .username = username_filter_val)
        IF username_filter_op = 'eq' ELSE 
        
        (SELECT users1 FILTER (.username != username_filter_val) ?? true)
        IF username_filter_op = 'neq' ELSE 
        
        (SELECT users1 FILTER contains(.username, username_filter_val))
        IF username_filter_op = 'ct' ELSE 
        
        (
            SELECT users1
            FILTER (NOT contains(.username, username_filter_val)) ?? true
        )
    ),

    mobile_filter := <optional json>$mobile,
    mobile_filter_op := <str>mobile_filter['op'],
    mobile_filter_val := <str>mobile_filter['val'],
    users3 := (
        (SELECT users2) IF NOT EXISTS mobile_filter_op ELSE 
    
        (SELECT users2 FILTER .mobile = mobile_filter_val)
        IF mobile_filter_op = 'eq' ELSE
        
        (SELECT users2 FILTER (.mobile != mobile_filter_val) ?? true)
        IF mobile_filter_op = 'neq' ELSE 
        
        (SELECT users2 FILTER contains(.mobile, mobile_filter_val))
        IF mobile_filter_op = 'ct' ELSE
        
        (
            SELECT users2
            FILTER (NOT contains(.mobile, mobile_filter_val)) ?? true
        )
    ),

    email_filter := <optional json>$email,
    email_filter_op := <str>email_filter['op'],
    email_filter_val := <str>email_filter['val'],
    users4 := (
        (SELECT users3) IF NOT EXISTS email_filter_op ELSE

        (SELECT users3 FILTER .email = email_filter_val)
        IF email_filter_op = 'eq' ELSE

        (SELECT users3 FILTER (.email != email_filter_val) ?? true)
        IF email_filter_op = 'neq' ELSE

        (SELECT users3 FILTER contains(.email, email_filter_val))
        IF email_filter_op = 'ct' ELSE

        (SELECT users3 FILTER (NOT contains(.email, email_filter_val)) ?? true)
    ),

    is_deleted_filter := <optional json>$is_deleted,
    is_deleted_filter_val := <bool>is_deleted_filter['val'],
    users5 := (
        (SELECT users4) IF EXISTS is_deleted_filter ELSE

        (SELECT users4 FILTER .is_deleted = is_deleted_filter_val)
        IF <str>is_deleted_filter['op'] in {'eq', 'ct'} ELSE

        (SELECT users4 FILTER .is_deleted != is_deleted_filter_val)
    ),

    created_at_filter := <optional json>$created_at,
    created_at_filter_uval := <datetime>created_at_filter['uval'],
    created_at_filter_lval := <datetime>created_at_filter['lval'],
    users6 := (
        (SELECT users5) IF NOT EXISTS created_at_filter ELSE

        (SELECT users5 FILTER .created_at <= created_at_filter_uval)
        IF NOT EXISTS created_at_filter_lval ELSE

        (SELECT users5 FILTER .created_at >= created_at_filter_lval)
        IF NOT EXISTS created_at_filter_uval ELSE

        (
            SELECT users5
            FILTER .created_at >= created_at_filter_lval
            AND .created_at <= created_at_filter_uval
        )
    ),

    last_login_at_filter := <optional json>$last_login_at,
    last_login_at_filter_uval := <datetime>last_login_at_filter['uval'],
    last_login_at_filter_lval := <datetime>last_login_at_filter['lval'],
    users7 := (
        (SELECT users6) IF NOT EXISTS last_login_at_filter ELSE

        (
            SELECT users6
            FILTER (.last_login_at <= last_login_at_filter_uval) ?? true
        ) IF NOT EXISTS last_login_at_filter_lval ELSE

        (SELECT users6 FILTER .last_login_at >= last_login_at_filter_lval)
        IF NOT EXISTS last_login_at_filter_uval ELSE

        (
            SELECT users6
            FILTER .last_login_at >= last_login_at_filter_lval
            AND .last_login_at <= last_login_at_filter_uval
        )
    ),

    total := count(users7)

select <json>(
    total := total,
    per_page := <int64>$per_page,
    page := <int64>$page,
    last := math::ceil(total / <int64>$per_page),
    rows := array_agg((
        select users7 {
            id,
            name,
            username,
            email,
            mobile,
            is_deleted,
            created_at,
            last_login_at
        }
        offset (<int64>$page - 1) * <int64>$per_page
        limit <int64>$per_page
    ))
);
